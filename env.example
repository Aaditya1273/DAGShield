# DAGShield REAL Network Configuration
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# WALLETCONNECT & RAINBOWKIT (REQUIRED FOR WALLET CONNECTION)
# =============================================================================

# Get your project ID from https://cloud.walletconnect.com
NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=your_walletconnect_project_id_here

# Default chain (U2U Testnet)
NEXT_PUBLIC_DEFAULT_CHAIN_ID=2484

# =============================================================================
# BLOCKCHAIN NETWORKS (REAL RPC ENDPOINTS)
# =============================================================================

# U2U Network (Primary DAG Network)
U2U_TESTNET_RPC=https://rpc-nebulas-testnet.uniultra.xyz
U2U_MAINNET_RPC=https://rpc-mainnet.uniultra.xyz
U2U_EXPLORER_API_KEY=your_u2u_explorer_api_key_here

# Ethereum Network
ETHEREUM_RPC=https://mainnet.infura.io/v3/your_infura_project_id
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# Polygon Network
POLYGON_RPC=https://polygon-rpc.com
POLYGONSCAN_API_KEY=your_polygonscan_api_key_here

# BSC Network
BSC_RPC=https://bsc-dataseed1.binance.org
BSCSCAN_API_KEY=your_bscscan_api_key_here

# Avalanche Network
AVALANCHE_RPC=https://api.avax.network/ext/bc/C/rpc
SNOWTRACE_API_KEY=your_snowtrace_api_key_here

# =============================================================================
# WALLET PRIVATE KEYS (KEEP SECURE!)
# =============================================================================

# Main deployment key (for testnet)
PRIVATE_KEY=your_private_key_here

# Production keys (use different keys for security)
MAINNET_PRIVATE_KEY=your_mainnet_private_key_here
ETHEREUM_PRIVATE_KEY=your_ethereum_private_key_here
POLYGON_PRIVATE_KEY=your_polygon_private_key_here
BSC_PRIVATE_KEY=your_bsc_private_key_here
AVALANCHE_PRIVATE_KEY=your_avalanche_private_key_here

# =============================================================================
# AI THREAT DETECTION APIs (REAL SERVICES)
# =============================================================================

# VirusTotal API for malware detection
VIRUSTOTAL_API_KEY=your_virustotal_api_key_here

# AbuseIPDB API for IP reputation
ABUSEIPDB_API_KEY=your_abuseipdb_api_key_here

# AlienVault OTX API for threat intelligence
OTX_API_KEY=your_otx_api_key_here

# OpenAI API for advanced text analysis
OPENAI_API_KEY=your_openai_api_key_here

# Groq API for fast AI inference
GROQ_API_KEY=your_groq_api_key_here

# =============================================================================
# CHAINLINK ORACLES (REAL ORACLE NETWORK)
# =============================================================================

# Chainlink node configuration
CHAINLINK_NODE_URL=https://your-chainlink-node.com
CHAINLINK_API_KEY=your_chainlink_api_key_here
CHAINLINK_SECRET=your_chainlink_secret_here

# Oracle job IDs for different chains
ETHEREUM_ORACLE_JOB_ID=your_ethereum_job_id_here
POLYGON_ORACLE_JOB_ID=your_polygon_job_id_here
BSC_ORACLE_JOB_ID=your_bsc_job_id_here

# =============================================================================
# REAL-TIME DATA FEEDS
# =============================================================================

# CoinGecko API for token prices
COINGECKO_API_KEY=your_coingecko_api_key_here

# Moralis API for blockchain data
MORALIS_API_KEY=your_moralis_api_key_here

# Alchemy API for enhanced blockchain access
ALCHEMY_API_KEY=your_alchemy_api_key_here

# The Graph API for decentralized indexing
GRAPH_API_KEY=your_graph_api_key_here

# =============================================================================
# MONITORING & ANALYTICS (REAL SERVICES)
# =============================================================================

# Sentry for error tracking
SENTRY_DSN=your_sentry_dsn_here

# DataDog for monitoring
DATADOG_API_KEY=your_datadog_api_key_here

# Grafana for dashboards
GRAFANA_API_KEY=your_grafana_api_key_here

# =============================================================================
# DEPLOYMENT & CI/CD (REAL SERVICES)
# =============================================================================

# Vercel for frontend deployment
VERCEL_TOKEN=your_vercel_token_here
VERCEL_ORG_ID=your_vercel_org_id_here
VERCEL_PROJECT_ID=your_vercel_project_id_here

# AWS for cloud infrastructure
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_REGION=us-east-1

# Docker Hub for container registry
DOCKER_USERNAME=your_docker_username_here
DOCKER_PASSWORD=your_docker_password_here

# =============================================================================
# COMMUNICATION & NOTIFICATIONS (REAL SERVICES)
# =============================================================================

# Slack for notifications
SLACK_WEBHOOK=your_slack_webhook_url_here
SLACK_BOT_TOKEN=your_slack_bot_token_here

# Discord for community
DISCORD_WEBHOOK=your_discord_webhook_url_here
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Telegram for alerts
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# =============================================================================
# DATABASE & STORAGE (REAL SERVICES)
# =============================================================================

# PostgreSQL for production data
DATABASE_URL=postgresql://user:password@localhost:5432/dagshield

# Redis for caching
REDIS_URL=redis://localhost:6379

# IPFS for decentralized storage
IPFS_API_URL=https://ipfs.infura.io:5001
IPFS_PROJECT_ID=your_ipfs_project_id_here
IPFS_PROJECT_SECRET=your_ipfs_project_secret_here

# =============================================================================
# SECURITY & COMPLIANCE
# =============================================================================

# JWT secret for authentication
JWT_SECRET=your_super_secure_jwt_secret_here

# Encryption key for sensitive data
ENCRYPTION_KEY=your_32_character_encryption_key_here

# Rate limiting
RATE_LIMIT_MAX=1000
RATE_LIMIT_WINDOW=3600

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Next.js public variables (will be exposed to browser)
NEXT_PUBLIC_APP_NAME=DAGShield
NEXT_PUBLIC_APP_VERSION=1.0.0
NEXT_PUBLIC_CHAIN_ID=2484
NEXT_PUBLIC_NETWORK_NAME=u2uTestnet

# Contract addresses (filled automatically by deployment script)
NEXT_PUBLIC_DAGSHIELD_TOKEN=
NEXT_PUBLIC_NODE_REGISTRY=
NEXT_PUBLIC_ORACLE=

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Environment
NODE_ENV=development

# Debug flags
DEBUG=dagshield:*
RUST_LOG=info

# Testing
REPORT_GAS=true
COINMARKETCAP_API_KEY=your_coinmarketcap_api_key_here

# =============================================================================
# ENERGY & SUSTAINABILITY
# =============================================================================

# KlimaDAO API for carbon credits
KLIMA_API_KEY=your_klima_api_key_here

# Energy tracking services
JOULEMETER_API_KEY=your_joulemeter_api_key_here

# =============================================================================
# EXAMPLE VALUES (REPLACE WITH REAL VALUES)
# =============================================================================

# Example private key (DO NOT USE IN PRODUCTION)
# PRIVATE_KEY=0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

# Example API keys (GET REAL ONES)
# ETHERSCAN_API_KEY=ABC123DEF456GHI789JKL012MNO345PQR678STU901VWX234YZ
# VIRUSTOTAL_API_KEY=abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. NEVER commit this file with real values to version control
# 2. Use different private keys for different networks
# 3. Rotate API keys regularly
# 4. Use environment-specific configurations
# 5. Enable 2FA on all service accounts
# 6. Monitor API usage and set up alerts
# 7. Use hardware wallets for mainnet deployments
# 8. Regularly audit and update dependencies
